language: cpp
sudo: false

os:
  - linux

compiler:
  - gcc
  - clang

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.7
      - george-edison55-precise-backports
    packages:
      - gcc-5
      - g++-5
      - binutils
      - clang-3.7
      - cmake
      - cmake-data

git:
  submodules: false

env:
  - build_type="release" static_libraries="FALSE"
  - build_type="release" static_libraries="TRUE"
  - build_type="debug" static_libraries="FALSE"
  - build_type="debug" static_libraries="TRUE"

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then wget https://cmake.org/files/v3.5/cmake-3.5.0-Darwin-x86_64.tar.gz && tar xfz cmake-3.5.0-Darwin-x86_64.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export PATH="`pwd`/cmake-3.5.0-Darwin-x86_64/CMake.app/Contents/bin":$PATH ; fi
  
before_script:
  - sed -i.backup 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  
script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if [ $CXX = "g++" ]; then export CXX="g++-5" CC="gcc-5"; AR="gcc-ar-5"; RANLIB="gcc-ranlib-5"; NM="gcc-nm-5"; fi; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if [ $CXX = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi; fi
  - ./fetchDependencies.py
  - mkdir bin
  - cd bin
  - if [ "$TRAVIS_OS_NAME" = "linux" ] && [ $CXX = "g++-5" ] && [ $static_libraries = "TRUE" ] && [ $build_type = "release" ]; then cmake -D build_type="release" -D static_libraries="TRUE" -D CMAKE_AR="/usr/bin/gcc-ar-5" -D CMAKE_RANLIB="/usr/bin/gcc-ranlib-5" -D CMAKE_NM="/usr/bin/gcc-nm-5" -D appended_flags="-fuse-linker-plugin" ..; else cmake -D build_type=$build_type -D static_libraries=$static_libraries ..; fi;
  - make -j 2
  - ctest -V -j 2

matrix:
  #exclude:
  #problem with llvm gold linker on travis
  #- os: linux
  #  compiler: clang
  #  env: build_type="release" static_libraries="FALSE"
    
  #- os: linux
  #  compiler: clang
  #  env: build_type="release" static_libraries="TRUE"

  #- os: linux
  #  compiler: gcc
  #  env: build_type="release" static_libraries="TRUE"
    
  include:
  - os: osx
    compiler: clang
    env: build_type="release"
    
  - os: osx
    compiler: clang
    env: build_type="release" static_libraries="TRUE"
    
  - os: osx
    compiler: clang
    env: build_type="debug"

  - os: osx
    compiler: clang
    env: build_type="debug" static_libraries="TRUE"
    
  - os: linux
    compiler: gcc
    env: build_type="coverage" static_libraries="TRUE" test_subprojects="TRUE"
